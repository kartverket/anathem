/* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  */
/* UTM / WGS-84 Conversion Functions                                  (c) Chris Veness 2014-2016  */
/*                                                                                   MIT Licence  */
/* https://github.com/chrisveness/geodesy                                                         */
/* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  */
"use strict"
function Vector3d(t,o,r){return this instanceof Vector3d?(this.x=Number(t),this.y=Number(o),void(this.z=Number(r))):new Vector3d(t,o,r)}function LatLon(t,o,r){return this instanceof LatLon?(void 0===r&&(r=LatLon.datum.WGS84),this.lat=Number(t),this.lon=Number(o),void(this.datum=r)):new LatLon(t,o,r)}function Utm(t,o,r,e,i,a,n){if(!(this instanceof Utm))return new Utm(t,o,r,e,i,a,n)
if(void 0===i&&(i=LatLon.datum.WGS84),void 0===a&&(a=null),void 0===n&&(n=null),!(1<=t&&t<=60))throw new Error("Invalid UTM zone "+t)
if(!o.match(/[NS]/i))throw new Error("Invalid UTM hemisphere "+o)
this.zone=Number(t),this.hemisphere=o.toUpperCase(),this.easting=Number(r),this.northing=Number(e),this.datum=i,this.convergence=null===a?null:Number(a),this.scale=null===n?null:Number(n)}if(Vector3d.prototype.plus=function(t){if(!(t instanceof Vector3d))throw new TypeError("v is not Vector3d object")
return new Vector3d(this.x+t.x,this.y+t.y,this.z+t.z)},Vector3d.prototype.minus=function(t){if(!(t instanceof Vector3d))throw new TypeError("v is not Vector3d object")
return new Vector3d(this.x-t.x,this.y-t.y,this.z-t.z)},Vector3d.prototype.times=function(t){return t=Number(t),new Vector3d(this.x*t,this.y*t,this.z*t)},Vector3d.prototype.dividedBy=function(t){return t=Number(t),new Vector3d(this.x/t,this.y/t,this.z/t)},Vector3d.prototype.dot=function(t){if(!(t instanceof Vector3d))throw new TypeError("v is not Vector3d object")
return this.x*t.x+this.y*t.y+this.z*t.z},Vector3d.prototype.cross=function(t){if(!(t instanceof Vector3d))throw new TypeError("v is not Vector3d object")
var o=this.y*t.z-this.z*t.y,r=this.z*t.x-this.x*t.z,e=this.x*t.y-this.y*t.x
return new Vector3d(o,r,e)},Vector3d.prototype.negate=function(){return new Vector3d((-this.x),(-this.y),(-this.z))},Vector3d.prototype.length=function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)},Vector3d.prototype.unit=function(){var t=this.length()
if(1==t)return this
if(0==t)return this
var o=this.x/t,r=this.y/t,e=this.z/t
return new Vector3d(o,r,e)},Vector3d.prototype.angleTo=function(t,o){if(!(t instanceof Vector3d))throw new TypeError("v is not Vector3d object")
var r=this.cross(t).length(),e=this.dot(t)
if(void 0!==o){if(!(o instanceof Vector3d))throw new TypeError("vSign is not Vector3d object")
r=this.cross(t).dot(o)<0?-r:r}return Math.atan2(r,e)},Vector3d.prototype.rotateAround=function(t,o){if(!(t instanceof Vector3d))throw new TypeError("axis is not Vector3d object")
for(var r=this.unit(),e=[r.x,r.y,r.z],i=t.unit(),a=Math.sin(o),n=Math.cos(o),s=[[i.x*i.x*(1-n)+n,i.x*i.y*(1-n)-i.z*a,i.x*i.z*(1-n)+i.y*a],[i.y*i.x*(1-n)+i.z*a,i.y*i.y*(1-n)+n,i.y*i.z*(1-n)-i.x*a],[i.z*i.x*(1-n)-i.y*a,i.z*i.y*(1-n)+i.x*a,i.z*i.z*(1-n)+n]],h=[0,0,0],d=0;d<3;d++)for(var u=0;u<3;u++)h[d]+=s[d][u]*e[u]
var l=new Vector3d(h[0],h[1],h[2])
return l},Vector3d.prototype.toString=function(t){var o=void 0===t?3:Number(t),r="["+this.x.toFixed(o)+","+this.y.toFixed(o)+","+this.z.toFixed(o)+"]"
return r},"undefined"!=typeof module&&module.exports&&(module.exports=Vector3d),"undefined"!=typeof module&&module.exports)var Vector3d=require("./vector3d.js")
if("undefined"!=typeof module&&module.exports)var Dms=require("./dms.js")
if(LatLon.ellipsoid={WGS84:{a:6378137,b:6356752.31425,f:1/298.257223563},GRS80:{a:6378137,b:6356752.31414,f:1/298.257222101},Airy1830:{a:6377563.396,b:6356256.909,f:1/299.3249646},AiryModified:{a:6377340.189,b:6356034.448,f:1/299.3249646},Intl1924:{a:6378388,b:6356911.946,f:1/297},Bessel1841:{a:6377397.155,b:6356078.963,f:1/299.152815351}},LatLon.datum={WGS84:{ellipsoid:LatLon.ellipsoid.WGS84,transform:{tx:0,ty:0,tz:0,rx:0,ry:0,rz:0,s:0}},NAD83:{ellipsoid:LatLon.ellipsoid.GRS80,transform:{tx:1.004,ty:-1.91,tz:-.515,rx:.0267,ry:34e-5,rz:.011,s:-.0015}},OSGB36:{ellipsoid:LatLon.ellipsoid.Airy1830,transform:{tx:-446.448,ty:125.157,tz:-542.06,rx:-.1502,ry:-.247,rz:-.8421,s:20.4894}},ED50:{ellipsoid:LatLon.ellipsoid.Intl1924,transform:{tx:89.5,ty:93.8,tz:123.1,rx:0,ry:0,rz:.156,s:-1.2}},Irl1975:{ellipsoid:LatLon.ellipsoid.AiryModified,transform:{tx:-482.53,ty:130.596,tz:-564.557,rx:-1.042,ry:-.214,rz:-.631,s:-8.15}},TokyoJapan:{ellipsoid:LatLon.ellipsoid.Bessel1841,transform:{tx:148,ty:-507,tz:-685,rx:0,ry:0,rz:0,s:0}}},LatLon.prototype.convertDatum=function(t){var o,r=this
if(r.datum==LatLon.datum.WGS84&&(o=t.transform),t==LatLon.datum.WGS84){o={}
for(var e in r.datum.transform)r.datum.transform.hasOwnProperty(e)&&(o[e]=-r.datum.transform[e])}void 0===o&&(r=this.convertDatum(LatLon.datum.WGS84),o=t.transform)
var i=r.toCartesian(),a=i.applyTransform(o),n=a.toLatLonE(t)
return n},LatLon.prototype.toCartesian=function(){var t=this.lat.toRadians(),o=this.lon.toRadians(),r=0,e=this.datum.ellipsoid.a,i=this.datum.ellipsoid.f,a=Math.sin(t),n=Math.cos(t),s=Math.sin(o),h=Math.cos(o),d=2*i-i*i,u=e/Math.sqrt(1-d*a*a),l=(u+r)*n*h,c=(u+r)*n*s,p=(u*(1-d)+r)*a,f=new Vector3d(l,c,p)
return f},Vector3d.prototype.toLatLonE=function(t){var o=this.x,r=this.y,e=this.z,i=t.ellipsoid.a,a=t.ellipsoid.b,n=t.ellipsoid.f,s=2*n-n*n,h=s/(1-s),d=Math.sqrt(o*o+r*r),u=Math.sqrt(d*d+e*e),l=a*e/(i*d)*(1+h*a/u),c=l/Math.sqrt(1+l*l),p=c/l,f=isNaN(p)?0:Math.atan2(e+h*a*c*c*c,d-s*i*p*p*p),M=Math.atan2(r,o),m=Math.sin(f),y=(Math.cos(f),i/Math.sqrt(1-s*m*m),new LatLon(f.toDegrees(),M.toDegrees(),t))
return y},Vector3d.prototype.applyTransform=function(t){var o=this.x,r=this.y,e=this.z,i=t.tx,a=t.ty,n=t.tz,s=(t.rx/3600).toRadians(),h=(t.ry/3600).toRadians(),d=(t.rz/3600).toRadians(),u=t.s/1e6+1,l=i+o*u-r*d+e*h,c=a+o*d+r*u-e*s,p=n-o*h+r*s+e*u,f=new Vector3d(l,c,p)
return f},LatLon.prototype.toString=function(t,o){return Dms.toLat(this.lat,t,o)+", "+Dms.toLon(this.lon,t,o)},void 0===Number.prototype.toRadians&&(Number.prototype.toRadians=function(){return this*Math.PI/180}),void 0===Number.prototype.toDegrees&&(Number.prototype.toDegrees=function(){return 180*this/Math.PI}),"undefined"!=typeof module&&module.exports&&(module.exports=LatLon,module.exports.Vector3d=Vector3d),"undefined"!=typeof module&&module.exports)var LatLon=require("./latlon-ellipsoidal.js")
LatLon.prototype.toUtm=function(){if(isNaN(this.lat)||isNaN(this.lon))throw new Error("Invalid point")
if(!(-80<=this.lat&&this.lat<=84))throw new Error("Outside UTM limits")
var t=5e5,o=1e7,r=Math.floor((this.lon+180)/6)+1,e=(6*(r-1)-180+3).toRadians(),i="CDEFGHJKLMNPQRSTUVWXX",a=i.charAt(Math.floor(this.lat/8+10))
31==r&&"V"==a&&this.lon>=3&&(r++,e+=6..toRadians()),32==r&&"X"==a&&this.lon<9&&(r--,e-=6..toRadians()),32==r&&"X"==a&&this.lon>=9&&(r++,e+=6..toRadians()),34==r&&"X"==a&&this.lon<21&&(r--,e-=6..toRadians()),34==r&&"X"==a&&this.lon>=21&&(r++,e+=6..toRadians()),36==r&&"X"==a&&this.lon<33&&(r--,e-=6..toRadians()),36==r&&"X"==a&&this.lon>=33&&(r++,e+=6..toRadians())
for(var n=this.lat.toRadians(),s=this.lon.toRadians()-e,h=this.datum.ellipsoid.a,d=this.datum.ellipsoid.f,u=.9996,l=Math.sqrt(d*(2-d)),c=d/(2-d),p=c*c,f=c*p,M=c*f,m=c*M,y=c*m,x=Math.cos(s),v=Math.sin(s),L=Math.tan(s),N=Math.tan(n),z=Math.sinh(l*Math.atanh(l*N/Math.sqrt(1+N*N))),V=N*Math.sqrt(1+z*z)-z*Math.sqrt(1+N*N),w=Math.atan2(V,x),b=Math.asinh(v/Math.sqrt(V*V+x*x)),g=h/(1+c)*(1+.25*p+1/64*M+1/256*y),q=[null,.5*c-2/3*p+5/16*f+41/180*M-127/288*m+7891/37800*y,13/48*p-.6*f+557/1440*M+281/630*m-1983433/1935360*y,61/240*f-103/140*M+15061/26880*m+167603/181440*y,49561/161280*M-179/168*m+6601661/7257600*y,34729/80640*m-3418889/1995840*y,.6650675310896665*y],S=w,R=1;R<=6;R++)S+=q[R]*Math.sin(2*R*w)*Math.cosh(2*R*b)
for(var E=b,R=1;R<=6;R++)E+=q[R]*Math.cos(2*R*w)*Math.sinh(2*R*b)
for(var D=u*g*E,T=u*g*S,U=1,R=1;R<=6;R++)U+=2*R*q[R]*Math.cos(2*R*w)*Math.cosh(2*R*b)
for(var F=0,R=1;R<=6;R++)F+=2*R*q[R]*Math.sin(2*R*w)*Math.sinh(2*R*b)
var G=Math.atan(V/Math.sqrt(1+V*V)*L),j=Math.atan2(F,U),I=G+j,W=Math.sin(n),X=Math.sqrt(1-l*l*W*W)*Math.sqrt(1+N*N)/Math.sqrt(V*V+x*x),A=g/h*Math.sqrt(U*U+F*F),B=u*X*A
D+=t,T<0&&(T+=o),D=Number(D.toFixed(6)),T=Number(T.toFixed(6))
var C=Number(I.toDegrees().toFixed(9)),P=Number(B.toFixed(12)),O=this.lat>=0?"N":"S"
return new Utm(r,O,D,T,this.datum,C,P)},Utm.prototype.toLatLonE=function(){var t=this.zone,o=this.hemisphere,r=this.easting,e=this.northing
if(isNaN(t)||isNaN(r)||isNaN(e))throw new Error("Invalid coordinate")
var i=5e5,a=1e7,n=this.datum.ellipsoid.a,s=this.datum.ellipsoid.f,h=.9996
r-=i,e="S"==o?e-a:e
for(var d=Math.sqrt(s*(2-s)),u=s/(2-s),l=u*u,c=u*l,p=u*c,f=u*p,M=u*f,m=n/(1+u)*(1+.25*l+1/64*p+1/256*M),y=r/(h*m),x=e/(h*m),v=[null,.5*u-2/3*l+37/96*c-1/360*p-81/512*f+96199/604800*M,1/48*l+1/15*c-437/1440*p+46/105*f-1118711/3870720*M,17/480*c-37/840*p-209/4480*f+5569/90720*M,4397/161280*p-11/504*f-830251/7257600*M,4583/161280*f-108847/3991680*M,.03233083094085698*M],L=x,N=1;N<=6;N++)L-=v[N]*Math.sin(2*N*x)*Math.cosh(2*N*y)
for(var z=y,N=1;N<=6;N++)z-=v[N]*Math.cos(2*N*x)*Math.sinh(2*N*y)
var V=Math.sinh(z),w=Math.sin(L),b=Math.cos(L),g=w/Math.sqrt(V*V+b*b),q=g
do{var S=Math.sinh(d*Math.atanh(d*q/Math.sqrt(1+q*q))),R=q*Math.sqrt(1+S*S)-S*Math.sqrt(1+q*q),E=(g-R)/Math.sqrt(1+R*R)*(1+(1-d*d)*q*q)/((1-d*d)*Math.sqrt(1+q*q))
q+=E}while(Math.abs(E)>1e-12)
for(var D=q,T=Math.atan(D),U=Math.atan2(V,b),F=1,N=1;N<=6;N++)F-=2*N*v[N]*Math.cos(2*N*x)*Math.cosh(2*N*y)
for(var G=0,N=1;N<=6;N++)G+=2*N*v[N]*Math.sin(2*N*x)*Math.sinh(2*N*y)
var j=Math.atan(Math.tan(L)*Math.tanh(z)),I=Math.atan2(G,F),W=j+I,X=Math.sin(T),A=Math.sqrt(1-d*d*X*X)*Math.sqrt(1+D*D)*Math.sqrt(V*V+b*b),B=m/n/Math.sqrt(F*F+G*G),C=h*A*B,P=(6*(t-1)-180+3).toRadians()
U+=P
var O=Number(T.toDegrees().toFixed(11)),J=Number(U.toDegrees().toFixed(11)),k=Number(W.toDegrees().toFixed(9)),H=Number(C.toFixed(12)),K=new LatLon(O,J,this.datum)
return K.convergence=k,K.scale=H,K},Utm.parse=function(t,o){if(void 0===o&&(o=LatLon.datum.WGS84),t=t.trim().match(/\S+/g),null==t||4!=t.length)throw new Error("Invalid UTM coordinate")
var r=t[0],e=t[1],i=t[2],a=t[3]
return new Utm(r,e,i,a,o)},Utm.prototype.toString=function(t){t=Number(t||0)
var o=this.zone,r=this.hemisphere,e=this.easting,i=this.northing
return isNaN(o)||!r.match(/[NS]/)||isNaN(e)||isNaN(i)?"":o+" "+r+" "+e.toFixed(t)+" "+i.toFixed(t)},void 0===Math.sinh&&(Math.sinh=function(t){return(Math.exp(t)-Math.exp(-t))/2}),void 0===Math.cosh&&(Math.cosh=function(t){return(Math.exp(t)+Math.exp(-t))/2}),void 0===Math.tanh&&(Math.tanh=function(t){return(Math.exp(t)-Math.exp(-t))/(Math.exp(t)+Math.exp(-t))}),void 0===Math.asinh&&(Math.asinh=function(t){return Math.log(t+Math.sqrt(1+t*t))}),void 0===Math.atanh&&(Math.atanh=function(t){return Math.log((1+t)/(1-t))/2}),void 0===String.prototype.trim&&(String.prototype.trim=function(){return String(this).replace(/^\s\s*/,"").replace(/\s\s*$/,"")}),"undefined"!=typeof module&&module.exports&&(module.exports=Utm)
